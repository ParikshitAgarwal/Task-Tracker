{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["button","text","color","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Button","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","Day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","Text","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","deleteTask","method","filter","addTask","headers","body","JSON","stringify","toggleReminder","taskToToggle","updTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc16b689.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\n\r\nconst button = ({text,color,onClick}) => {\r\n    \r\n    return  <button onClick = {onClick} style={{ backgroundColor: color}} className='btn'>{text}</button>\r\n}\r\nbutton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\nbutton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\nexport default button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title , onAdd, showAdd}) => {\r\n   \r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n           <Button text={showAdd ? 'Close' : 'Add'} color={showAdd ? 'red' : 'green'} onClick={onAdd}/>\r\n           \r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title : 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n}\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete,onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{\r\n                color: 'red',\r\n                cursor: 'pointer',\r\n            }}\r\n                onClick={() => onDelete(task.id)}\r\n            /></h3>\r\n            <p>{task.Day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({tasks,onDelete,onToggle}) => {\r\n\r\n   \r\n    return (\r\n        <>\r\n            {tasks.map((task)=>(\r\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle = {onToggle}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [Day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!Text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, Day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task' value={text}\r\n                    onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Add Day & Time</label>\r\n                <input type='text' placeholder='Add Day & Time' value={Day}\r\n                    onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' checked={reminder} value={reminder}\r\n                    onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n            <input type='submit' value='Save Task' className='btn btn-block' />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    } \n    getTasks()\n  }, [])\n\n  //Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    return data\n  } \n\n    //Fetch Task\n    const fetchTask = async (id) => {\n      const res = await fetch(`http://localhost:5000/tasks/${id}`)\n      const data = await res.json()\n      return data\n    } \n  // Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`,{\n      method:'DELETE',\n    })\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //Add Task\n  const addTask = async (task) => {\n   const res =  await fetch('http://localhost:5000/tasks',{\n      method:'POST',\n      headers: {\n        'Content-type' : 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n    const data = await res.json()\n    setTasks([...tasks,data])\n    /*const id = Math.floor(Math.random() * 10000)+1\n    const newTask = { id, ...task}\n    setTasks([...tasks, newTask])*/\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle,\n    reminder: !taskToToggle.reminder }\n      const res =  await fetch(`http://localhost:5000/tasks/${id}`,{\n        method:'PUT',\n        headers: {\n          'Content-type' : 'application/json'\n        },\n        body: JSON.stringify(updTask)\n      })\n      const data = await res.json()\n    \n    setTasks(tasks.map((task) =>\n      task.id === id ? { ...task, reminder: data.reminder } : task))\n  }\n  return (\n    <div className=\"container\">\n      <Header onAdd= {() => setShowAddTask(!showAddTask)}\n      showAdd = {showAddTask}/>\n     {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle = {toggleReminder}/>)\n        : ('No Task to do')}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}